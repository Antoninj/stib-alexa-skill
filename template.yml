AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar project ID.
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    Timeout: 20
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: AllAtOnce
      Role: !Ref CodeDeployRole

Resources:
  DailyCommuteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-DailyCommuteFunction'
      CodeUri: 'lambda/custom'
      Environment:
        Variables:
          env: sandbox
          log_level: DEBUG
          secret_name: OpenDataSandboxSecret
          open_data_api_endpoint: https://opendata-api.stib-mivb.be
          open_data_api_token_validity: 3600
          elasticache_config_endpoint: localhost
          
      Handler: daily_commute.handler
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        AlexaSkillEvent:
          Type: AlexaSkill
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/SecretsManagerReadWrite'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/AmazonDynamoDBAlexaSkillAccess'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'

Outputs:
  overrides:
      Value: !Sub |-
        {
          "manifest": {
            "apis": {
              "custom": {
                "endpoint": {
                  "uri": "https://561e3ae3.ngrok.io",
                  "sslCertificateType": "Wildcard"
                }
              }
            }
          }
        }
